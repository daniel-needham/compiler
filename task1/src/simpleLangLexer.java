// Generated from /home/dan/Uni Work/Compilers/assignment/246619/task1/src/simpleLang.g4 by ANTLR 4.10.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class simpleLangLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.10.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, LParen=13, Comma=14, RParen=15, LBrace=16, 
		Semicolon=17, RBrace=18, BINOP=19, TYPE=20, INTLIT=21, BOOLIT=22, IDFR=23, 
		WS=24;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
			"T__9", "T__10", "T__11", "LParen", "Comma", "RParen", "LBrace", "Semicolon", 
			"RBrace", "BINOP", "TYPE", "INTLIT", "BOOLIT", "IDFR", "WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "':='", "'if'", "'then'", "'else'", "'while'", "'do'", "'repeat'", 
			"'until'", "'print'", "'space'", "'newline'", "'skip'", "'('", "','", 
			"')'", "'{'", "';'", "'}'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, "LParen", "Comma", "RParen", "LBrace", "Semicolon", "RBrace", "BINOP", 
			"TYPE", "INTLIT", "BOOLIT", "IDFR", "WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public simpleLangLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "simpleLang.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u0018\u00b6\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0002\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014"+
		"\u0002\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017"+
		"\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0003"+
		"\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004"+
		"\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005"+
		"\u0001\u0005\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007"+
		"\u0001\u0007\u0001\u0007\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001"+
		"\b\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\n\u0001\n\u0001"+
		"\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\u000b\u0001\u000b\u0001"+
		"\u000b\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0001\r\u0001\r\u0001\u000e"+
		"\u0001\u000e\u0001\u000f\u0001\u000f\u0001\u0010\u0001\u0010\u0001\u0011"+
		"\u0001\u0011\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0012\u0001\u0012"+
		"\u0001\u0012\u0001\u0012\u0001\u0012\u0003\u0012\u0085\b\u0012\u0001\u0013"+
		"\u0001\u0013\u0001\u0013\u0001\u0013\u0001\u0013\u0001\u0013\u0001\u0013"+
		"\u0001\u0013\u0001\u0013\u0001\u0013\u0001\u0013\u0003\u0013\u0092\b\u0013"+
		"\u0001\u0014\u0001\u0014\u0001\u0014\u0005\u0014\u0097\b\u0014\n\u0014"+
		"\f\u0014\u009a\t\u0014\u0003\u0014\u009c\b\u0014\u0001\u0015\u0001\u0015"+
		"\u0001\u0015\u0001\u0015\u0001\u0015\u0001\u0015\u0001\u0015\u0001\u0015"+
		"\u0001\u0015\u0003\u0015\u00a7\b\u0015\u0001\u0016\u0001\u0016\u0005\u0016"+
		"\u00ab\b\u0016\n\u0016\f\u0016\u00ae\t\u0016\u0001\u0017\u0004\u0017\u00b1"+
		"\b\u0017\u000b\u0017\f\u0017\u00b2\u0001\u0017\u0001\u0017\u0000\u0000"+
		"\u0018\u0001\u0001\u0003\u0002\u0005\u0003\u0007\u0004\t\u0005\u000b\u0006"+
		"\r\u0007\u000f\b\u0011\t\u0013\n\u0015\u000b\u0017\f\u0019\r\u001b\u000e"+
		"\u001d\u000f\u001f\u0010!\u0011#\u0012%\u0013\'\u0014)\u0015+\u0016-\u0017"+
		"/\u0018\u0001\u0000\u0006\u0002\u0000<<>>\u0006\u0000&&*+--//^^||\u0001"+
		"\u000019\u0001\u000009\u0003\u0000AZ__az\u0003\u0000\t\n\r\r  \u00c0\u0000"+
		"\u0001\u0001\u0000\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0000\u0000"+
		"\u0005\u0001\u0000\u0000\u0000\u0000\u0007\u0001\u0000\u0000\u0000\u0000"+
		"\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001\u0000\u0000\u0000\u0000\r"+
		"\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0000\u0000\u0011"+
		"\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0000\u0000\u0015"+
		"\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0000\u0000\u0019"+
		"\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000\u0000\u0000\u001d"+
		"\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000\u0000\u0000\u0000!\u0001"+
		"\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000\u0000%\u0001\u0000\u0000"+
		"\u0000\u0000\'\u0001\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0000"+
		"\u0000+\u0001\u0000\u0000\u0000\u0000-\u0001\u0000\u0000\u0000\u0000/"+
		"\u0001\u0000\u0000\u0000\u00011\u0001\u0000\u0000\u0000\u00034\u0001\u0000"+
		"\u0000\u0000\u00057\u0001\u0000\u0000\u0000\u0007<\u0001\u0000\u0000\u0000"+
		"\tA\u0001\u0000\u0000\u0000\u000bG\u0001\u0000\u0000\u0000\rJ\u0001\u0000"+
		"\u0000\u0000\u000fQ\u0001\u0000\u0000\u0000\u0011W\u0001\u0000\u0000\u0000"+
		"\u0013]\u0001\u0000\u0000\u0000\u0015c\u0001\u0000\u0000\u0000\u0017k"+
		"\u0001\u0000\u0000\u0000\u0019p\u0001\u0000\u0000\u0000\u001br\u0001\u0000"+
		"\u0000\u0000\u001dt\u0001\u0000\u0000\u0000\u001fv\u0001\u0000\u0000\u0000"+
		"!x\u0001\u0000\u0000\u0000#z\u0001\u0000\u0000\u0000%\u0084\u0001\u0000"+
		"\u0000\u0000\'\u0091\u0001\u0000\u0000\u0000)\u009b\u0001\u0000\u0000"+
		"\u0000+\u00a6\u0001\u0000\u0000\u0000-\u00a8\u0001\u0000\u0000\u0000/"+
		"\u00b0\u0001\u0000\u0000\u000012\u0005:\u0000\u000023\u0005=\u0000\u0000"+
		"3\u0002\u0001\u0000\u0000\u000045\u0005i\u0000\u000056\u0005f\u0000\u0000"+
		"6\u0004\u0001\u0000\u0000\u000078\u0005t\u0000\u000089\u0005h\u0000\u0000"+
		"9:\u0005e\u0000\u0000:;\u0005n\u0000\u0000;\u0006\u0001\u0000\u0000\u0000"+
		"<=\u0005e\u0000\u0000=>\u0005l\u0000\u0000>?\u0005s\u0000\u0000?@\u0005"+
		"e\u0000\u0000@\b\u0001\u0000\u0000\u0000AB\u0005w\u0000\u0000BC\u0005"+
		"h\u0000\u0000CD\u0005i\u0000\u0000DE\u0005l\u0000\u0000EF\u0005e\u0000"+
		"\u0000F\n\u0001\u0000\u0000\u0000GH\u0005d\u0000\u0000HI\u0005o\u0000"+
		"\u0000I\f\u0001\u0000\u0000\u0000JK\u0005r\u0000\u0000KL\u0005e\u0000"+
		"\u0000LM\u0005p\u0000\u0000MN\u0005e\u0000\u0000NO\u0005a\u0000\u0000"+
		"OP\u0005t\u0000\u0000P\u000e\u0001\u0000\u0000\u0000QR\u0005u\u0000\u0000"+
		"RS\u0005n\u0000\u0000ST\u0005t\u0000\u0000TU\u0005i\u0000\u0000UV\u0005"+
		"l\u0000\u0000V\u0010\u0001\u0000\u0000\u0000WX\u0005p\u0000\u0000XY\u0005"+
		"r\u0000\u0000YZ\u0005i\u0000\u0000Z[\u0005n\u0000\u0000[\\\u0005t\u0000"+
		"\u0000\\\u0012\u0001\u0000\u0000\u0000]^\u0005s\u0000\u0000^_\u0005p\u0000"+
		"\u0000_`\u0005a\u0000\u0000`a\u0005c\u0000\u0000ab\u0005e\u0000\u0000"+
		"b\u0014\u0001\u0000\u0000\u0000cd\u0005n\u0000\u0000de\u0005e\u0000\u0000"+
		"ef\u0005w\u0000\u0000fg\u0005l\u0000\u0000gh\u0005i\u0000\u0000hi\u0005"+
		"n\u0000\u0000ij\u0005e\u0000\u0000j\u0016\u0001\u0000\u0000\u0000kl\u0005"+
		"s\u0000\u0000lm\u0005k\u0000\u0000mn\u0005i\u0000\u0000no\u0005p\u0000"+
		"\u0000o\u0018\u0001\u0000\u0000\u0000pq\u0005(\u0000\u0000q\u001a\u0001"+
		"\u0000\u0000\u0000rs\u0005,\u0000\u0000s\u001c\u0001\u0000\u0000\u0000"+
		"tu\u0005)\u0000\u0000u\u001e\u0001\u0000\u0000\u0000vw\u0005{\u0000\u0000"+
		"w \u0001\u0000\u0000\u0000xy\u0005;\u0000\u0000y\"\u0001\u0000\u0000\u0000"+
		"z{\u0005}\u0000\u0000{$\u0001\u0000\u0000\u0000|}\u0005=\u0000\u0000}"+
		"\u0085\u0005=\u0000\u0000~\u0085\u0007\u0000\u0000\u0000\u007f\u0080\u0005"+
		"<\u0000\u0000\u0080\u0085\u0005=\u0000\u0000\u0081\u0082\u0005>\u0000"+
		"\u0000\u0082\u0085\u0005=\u0000\u0000\u0083\u0085\u0007\u0001\u0000\u0000"+
		"\u0084|\u0001\u0000\u0000\u0000\u0084~\u0001\u0000\u0000\u0000\u0084\u007f"+
		"\u0001\u0000\u0000\u0000\u0084\u0081\u0001\u0000\u0000\u0000\u0084\u0083"+
		"\u0001\u0000\u0000\u0000\u0085&\u0001\u0000\u0000\u0000\u0086\u0087\u0005"+
		"i\u0000\u0000\u0087\u0088\u0005n\u0000\u0000\u0088\u0092\u0005t\u0000"+
		"\u0000\u0089\u008a\u0005b\u0000\u0000\u008a\u008b\u0005o\u0000\u0000\u008b"+
		"\u008c\u0005o\u0000\u0000\u008c\u0092\u0005l\u0000\u0000\u008d\u008e\u0005"+
		"u\u0000\u0000\u008e\u008f\u0005n\u0000\u0000\u008f\u0090\u0005i\u0000"+
		"\u0000\u0090\u0092\u0005t\u0000\u0000\u0091\u0086\u0001\u0000\u0000\u0000"+
		"\u0091\u0089\u0001\u0000\u0000\u0000\u0091\u008d\u0001\u0000\u0000\u0000"+
		"\u0092(\u0001\u0000\u0000\u0000\u0093\u009c\u00050\u0000\u0000\u0094\u0098"+
		"\u0007\u0002\u0000\u0000\u0095\u0097\u0007\u0003\u0000\u0000\u0096\u0095"+
		"\u0001\u0000\u0000\u0000\u0097\u009a\u0001\u0000\u0000\u0000\u0098\u0096"+
		"\u0001\u0000\u0000\u0000\u0098\u0099\u0001\u0000\u0000\u0000\u0099\u009c"+
		"\u0001\u0000\u0000\u0000\u009a\u0098\u0001\u0000\u0000\u0000\u009b\u0093"+
		"\u0001\u0000\u0000\u0000\u009b\u0094\u0001\u0000\u0000\u0000\u009c*\u0001"+
		"\u0000\u0000\u0000\u009d\u009e\u0005T\u0000\u0000\u009e\u009f\u0005R\u0000"+
		"\u0000\u009f\u00a0\u0005U\u0000\u0000\u00a0\u00a7\u0005E\u0000\u0000\u00a1"+
		"\u00a2\u0005F\u0000\u0000\u00a2\u00a3\u0005A\u0000\u0000\u00a3\u00a4\u0005"+
		"L\u0000\u0000\u00a4\u00a5\u0005S\u0000\u0000\u00a5\u00a7\u0005E\u0000"+
		"\u0000\u00a6\u009d\u0001\u0000\u0000\u0000\u00a6\u00a1\u0001\u0000\u0000"+
		"\u0000\u00a7,\u0001\u0000\u0000\u0000\u00a8\u00ac\u0007\u0004\u0000\u0000"+
		"\u00a9\u00ab\u0007\u0004\u0000\u0000\u00aa\u00a9\u0001\u0000\u0000\u0000"+
		"\u00ab\u00ae\u0001\u0000\u0000\u0000\u00ac\u00aa\u0001\u0000\u0000\u0000"+
		"\u00ac\u00ad\u0001\u0000\u0000\u0000\u00ad.\u0001\u0000\u0000\u0000\u00ae"+
		"\u00ac\u0001\u0000\u0000\u0000\u00af\u00b1\u0007\u0005\u0000\u0000\u00b0"+
		"\u00af\u0001\u0000\u0000\u0000\u00b1\u00b2\u0001\u0000\u0000\u0000\u00b2"+
		"\u00b0\u0001\u0000\u0000\u0000\u00b2\u00b3\u0001\u0000\u0000\u0000\u00b3"+
		"\u00b4\u0001\u0000\u0000\u0000\u00b4\u00b5\u0006\u0017\u0000\u0000\u00b5"+
		"0\u0001\u0000\u0000\u0000\b\u0000\u0084\u0091\u0098\u009b\u00a6\u00ac"+
		"\u00b2\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}